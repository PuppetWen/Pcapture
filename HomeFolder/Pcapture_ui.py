# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Pcapture.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1126, 850)
        self.gridLayout_3 = QtWidgets.QGridLayout(Form)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.groupBox_2 = QtWidgets.QGroupBox(Form)
        self.groupBox_2.setMaximumSize(QtCore.QSize(16777215, 72))
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout.setObjectName("gridLayout")
        self.Tips = QtWidgets.QLabel(self.groupBox_2)
        self.Tips.setObjectName("Tips")
        self.gridLayout.addWidget(self.Tips, 0, 0, 1, 1)
        self.start = QtWidgets.QToolButton(self.groupBox_2)
        self.start.setObjectName("start")
        self.gridLayout.addWidget(self.start, 0, 2, 1, 1)
        self.Command = QtWidgets.QLineEdit(self.groupBox_2)
        self.Command.setObjectName("Command")
        self.gridLayout.addWidget(self.Command, 0, 1, 1, 1)
        self.stop = QtWidgets.QToolButton(self.groupBox_2)
        self.stop.setObjectName("stop")
        self.gridLayout.addWidget(self.stop, 0, 3, 1, 1)
        self.gridLayout_3.addWidget(self.groupBox_2, 0, 0, 1, 1)
        self.groupBox_3 = QtWidgets.QGroupBox(Form)
        self.groupBox_3.setObjectName("groupBox_3")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.Recv = QtWidgets.QCheckBox(self.groupBox_3)
        self.Recv.setObjectName("Recv")
        self.gridLayout_2.addWidget(self.Recv, 0, 4, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.SendData = QtWidgets.QTextEdit(self.groupBox_3)
        self.SendData.setObjectName("SendData")
        self.horizontalLayout.addWidget(self.SendData)
        self.RecvData = QtWidgets.QTextEdit(self.groupBox_3)
        self.RecvData.setObjectName("RecvData")
        self.horizontalLayout.addWidget(self.RecvData)
        self.gridLayout_2.addLayout(self.horizontalLayout, 1, 0, 1, 8)
        self.RecvPass = QtWidgets.QPushButton(self.groupBox_3)
        self.RecvPass.setObjectName("RecvPass")
        self.gridLayout_2.addWidget(self.RecvPass, 0, 6, 1, 1)
        self.RecvHex = QtWidgets.QCheckBox(self.groupBox_3)
        self.RecvHex.setObjectName("RecvHex")
        self.gridLayout_2.addWidget(self.RecvHex, 0, 5, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(267, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem, 0, 7, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(239, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem1, 0, 3, 1, 1)
        self.SendPass = QtWidgets.QPushButton(self.groupBox_3)
        self.SendPass.setObjectName("SendPass")
        self.gridLayout_2.addWidget(self.SendPass, 0, 2, 1, 1)
        self.SendHex = QtWidgets.QCheckBox(self.groupBox_3)
        self.SendHex.setObjectName("SendHex")
        self.gridLayout_2.addWidget(self.SendHex, 0, 1, 1, 1)
        self.Send = QtWidgets.QCheckBox(self.groupBox_3)
        self.Send.setObjectName("Send")
        self.gridLayout_2.addWidget(self.Send, 0, 0, 1, 1)
        self.gridLayout_3.addWidget(self.groupBox_3, 1, 0, 1, 1)
        self.actionCheck_All = QtWidgets.QAction(Form)
        self.actionCheck_All.setObjectName("actionCheck_All")
        self.actionCopy = QtWidgets.QAction(Form)
        self.actionCopy.setObjectName("actionCopy")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Capture Details"))
        self.groupBox_2.setTitle(_translate("Form", "Command"))
        self.Tips.setText(_translate("Form", "Input Command："))
        self.start.setText(_translate("Form", "start"))
        self.Command.setToolTip(_translate("Form", "<html><head/><body><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">Usage: Pcapture [-pcap &lt;path&gt;] [-host &lt;192.168.1.1:27042&gt;] [-verbose] [-ssl &lt;lib&gt;] [--isUsb] [--isSpawn] [-wait &lt;seconds&gt;] [-P &lt;process name | process id&gt;]</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">Decrypts and logs a process\'s SSL traffic.</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">Arguments:</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">-pcap &lt;path&gt;, -p &lt;path&gt;</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">Name of PCAP file to write</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">-host &lt;192.168.1.1:27042&gt;, -H &lt;192.168.1.1:27042&gt;</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">connect to remote frida-server on HOST</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">-verbose, -v          Show verbose output</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">-process &lt;process name | process id&gt;, -P &lt;process name | process id&gt;</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">Process whose SSL calls to log</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">-ssl &lt;lib&gt;            SSL library to hook</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">--isUsb, -U           connect to USB device</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">--isSpawn, -f         if spawned app</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">-wait &lt;seconds&gt;, -w &lt;seconds&gt;</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">Time to wait for the process</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">Examples:</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">Pcapture -U -f -P [packagename] -v</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">Pcapture -U -P [packagename] -v -p [packagename].pcap</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">Pcapture -pcap ssl.pcap openssl</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">Pcapture -verbose 31337</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">Pcapture -pcap log.pcap -verbose wget</span></p><p><span style=\" font-family:\'宋体\',\'Calibri\'; font-size:10.5pt;\">Pcapture -pcap log.pcap -ssl &quot;*libssl.so*&quot; com.bigfacecat.testdemo</span></p></body></html>"))
        self.Command.setStatusTip(_translate("Form", "View command"))
        self.stop.setText(_translate("Form", "stop"))
        self.groupBox_3.setTitle(_translate("Form", "Data display"))
        self.Recv.setText(_translate("Form", "Recv Intercept"))
        self.SendData.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.RecvPass.setText(_translate("Form", "PASS"))
        self.RecvHex.setText(_translate("Form", "HEX"))
        self.SendPass.setText(_translate("Form", "PASS"))
        self.SendHex.setText(_translate("Form", "HEX"))
        self.Send.setText(_translate("Form", "Send Intercept"))
        self.actionCheck_All.setText(_translate("Form", "Check All"))
        self.actionCheck_All.setShortcut(_translate("Form", "Ctrl+A"))
        self.actionCopy.setText(_translate("Form", "Copy"))
        self.actionCopy.setToolTip(_translate("Form", "Copy"))
        self.actionCopy.setShortcut(_translate("Form", "Ctrl+C"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
